{"version":3,"sources":["components/Welcome.js","components/RegistrationForm.js","actions/index.js","components/SigninForm.js","components/DeleteButton.js","components/MiniPost.js","components/Posts.js","components/CommentForm.js","components/Comment.js","components/Post.js","components/CreatePostForm.js","components/UserPost.js","components/UserPosts.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["Welcome","className","to","React","Component","RegistrationForm","state","email","username","password","confirmPassword","register","length","alert","axios","post","then","res","setState","catch","err","type","value","this","onChange","e","target","name","id","required","onClick","viewPost","payload","SigninForm","signin","console","log","data","localStorage","setItem","token","props","user","connect","DeleteButton","deleteBtnHandler","stopPropagation","window","confirm","getItem","delete","_id","document","getElementById","remove","MiniPost","isClicked","clickHandler","createDate","date","postDate","Date","monthIndex","getMonth","day","getDate","user_id","title","createdAt","Posts","posts","get","headers","Authorization","map","index","currentUser","CommentForm","comment","commentClickHandler","content","updateComments","comments","postToView","Comment","isLiked","numLikes","likes","checkIfLiked","likesArray","userId","filter","like","toggleLike","patch","post_id","didLike","style","color","Post","CreatePostForm","contentChangeHandler","submit","autoFocus","rows","UserPost","UserPosts","App","logout","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","JSON","parse","reducer","action","stringify","removeItem","newComment","dummyComment","push","clear","ReactDOM","render","StrictMode","store","createStore"],"mappings":"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","file":"static/js/main.d693288f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Welcome extends React.Component {\r\n\r\n  render () {\r\n    return(\r\n        <section className=\"home-section-container\">\r\n            <em className=\"home-tagline\">Where good ideas find you</em>\r\n            <br />\r\n            <br />\r\n            <p>Read and share new perspectives on just about any topic. Everyone’s welcome.</p>\r\n            <br />\r\n            <br />\r\n            <Link to=\"/register\">Get Started</Link>\r\n        </section>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass RegistrationForm extends React.Component {\r\n\r\n  state = {\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',    \r\n  }\r\n\r\n  register = () => {\r\n    if(\r\n      this.state.email.length === 0 || \r\n      this.state.username.length === 0 || \r\n      this.state.password.length === 0 ||\r\n      this.state.confirmPassword.length === 0\r\n      ){\r\n      alert(\"Please enter valid credentials\");\r\n      return;\r\n    }\r\n\r\n    if(this.state.confirmPassword !== this.state.password){\r\n      return (alert(`Passwords doesn't match. Please type the same passwords`));\r\n    }\r\n\r\n    axios.post('http://localhost:8080/register', this.state)\r\n    .then(res => {\r\n      alert(\"You've successfully registered. You can now sign in\");\r\n      this.setState({\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '', \r\n      });\r\n    })\r\n    .catch(\r\n      err => {\r\n        alert(\"There's something wrong. The details you entered might already exist.\");\r\n        return;\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"reg-form-container\">\r\n        <h2>Get Started</h2>\r\n        <p>Please fill in this form to create an account.</p>\r\n        <hr></hr>\r\n\r\n        Email:{' '}\r\n        <input \r\n          type=\"email\" \r\n          value={this.state.email}\r\n          onChange={(e) => { this.setState({ email: e.target.value }) }}\r\n          name=\"email\" id=\"email\" required\r\n        />\r\n        Username:{' '}\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.username}\r\n          onChange={(e) => { this.setState({ username: e.target.value }) }}\r\n          name=\"usn\" id=\"usn\" required\r\n        />\r\n        <br />\r\n        Password:{' '}\r\n        <input \r\n          type=\"password\" \r\n          value={this.state.password}\r\n          onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n          name=\"psw\" id=\"psw\" required\r\n        />\r\n        <br />\r\n        Confirm Password:{' '}\r\n        <input \r\n          type=\"password\" \r\n          value={this.state.confirmPassword}\r\n          onChange={(e) => { this.setState({ confirmPassword: e.target.value }) }}\r\n          name=\"psw-repeat\" id=\"psw-repeat\" required\r\n        />\r\n        <br />\r\n        <button \r\n          className=\"registerbtn\"\r\n          onClick={ this.register }\r\n        >Register</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationForm;","export const signin = (user) => {\r\n  return {\r\n    type: 'SIGNIN',\r\n    payload: user\r\n  }\r\n}\r\n\r\nexport const viewPost = (post) => {\r\n  return {\r\n    type: 'VIEWPOST',\r\n    payload: post\r\n  }\r\n}\r\n\r\nexport const updateComments = (comments) => {\r\n  return {\r\n    type: 'UPDATECOMMENTS',\r\n    payload: comments\r\n  }\r\n}\r\n\r\nexport const logout = () => { \r\n  return {\r\n    type: 'LOGOUT' \r\n  }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { signin } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SigninForm extends React.Component {\r\n\r\n  state = {\r\n    // email: '',\r\n    username: '',\r\n    password: '', \r\n  }\r\n\r\n  signin = () => {\r\n    if(this.state.username.length === 0 || this.state.password.length === 0){\r\n      alert(\"Please enter valid credentials\");\r\n      return;\r\n    }\r\n\r\n    axios.post('http://localhost:8080/login', this.state)\r\n    .then(res => {\r\n      \r\n      alert('Success');\r\n      console.log(res.data);\r\n      localStorage.setItem('token', res.data.data.token);\r\n      this.props.signin(res.data.data.user);\r\n    }).catch(\r\n      err => {\r\n        alert(\"Invalid log in credentials.\");\r\n        return;\r\n      }\r\n    );\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"reg-form-container\">\r\n        <h2>Sign In</h2>\r\n        <p>Please fill in this form to sign in.</p>\r\n        <hr></hr>\r\n\r\n        Username:{' '}\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.username}\r\n          onChange={(e) => { this.setState({ username: e.target.value }) }}\r\n          name=\"usn\" id=\"usn\" required\r\n        />\r\n        <br />\r\n        Password:{' '}\r\n        <input \r\n          type=\"password\" \r\n          value={this.state.password}\r\n          onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n          name=\"psw\" id=\"psw\" required\r\n        />\r\n        <br />\r\n        <button \r\n          className=\"signinbtn\"\r\n          onClick={ this.signin }\r\n        >Sign In</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { signin })(SigninForm);","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nclass DeleteButton extends React.Component {\r\n\r\n  deleteBtnHandler = (e) => {\r\n    e.stopPropagation();\r\n    const input = window.confirm(\"Are you sure you want to delete this post?\");\r\n    if(!input){\r\n      return;\r\n    }\r\n\r\n    console.log(localStorage.getItem('token'));\r\n    axios\r\n      .delete(`http://localhost:8080/posts/${this.props.post._id}`, {\r\n        data: { token: localStorage.getItem('token') }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        alert(\"Post has been succesfully deleted\");\r\n        document.getElementById(this.props.post._id).remove();\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.deleteBtnHandler} className=\"delete-btn\">\r\n        Delete Post\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DeleteButton);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { viewPost } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nclass MiniPost extends React.Component {\r\n\r\n  state = {\r\n    isClicked: false\r\n  }\r\n\r\n  clickHandler = (e) => {\r\n    this.props.viewPost(this.props.post);\r\n    this.setState({isClicked: true});\r\n  }\r\n\r\n  createDate = (date) => {\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', \r\n      'May', 'Jun', 'Jul', 'Aug', \r\n      'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n    const postDate = new Date(date);\r\n\r\n    const monthIndex = postDate.getMonth();\r\n    const day = postDate.getDate();\r\n\r\n    return `${months[monthIndex]} ${day}`\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li \r\n        className=\"minipost-container\" \r\n        onClick={ this.clickHandler }\r\n        id={this.props.post._id}  \r\n      >\r\n        {this.state.isClicked ? <Redirect to=\"/post\" /> : null}\r\n        <p>Author: <span>{this.props.post.user_id.username}</span></p>\r\n        <h2>{this.props.post.title}</h2>\r\n        {this.createDate(this.props.post.createdAt)}\r\n        <hr />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { viewPost })(MiniPost);","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport MiniPost from './MiniPost';\r\n\r\nclass Posts extends React.Component {\r\n  state = {\r\n    posts: []\r\n  };\r\n\r\n  componentDidMount(){\r\n    axios\r\n    .get('http://localhost:8080/posts', {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        posts: res.data.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <ol className=\"posts-container\">\r\n        {this.state.posts.map((post, index) => (\r\n          <MiniPost\r\n            key={post._id}\r\n            post={post}\r\n          />\r\n        ))}\r\n      </ol>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Posts);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { updateComments } from '../actions';\r\n\r\nclass CommentForm extends React.Component {\r\n\r\n  state = {\r\n    comment: ''\r\n  }\r\n\r\n  commentClickHandler = () => {\r\n    axios\r\n    .post(`http://localhost:8080/posts/${this.props.post._id}/comment`, {\r\n        user_id: this.props.user._id,\r\n        content: this.state.comment\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(res => {\r\n        this.setState({comment: ''});\r\n        this.props.updateComments(res.data.data.comments);\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.comment}\r\n          onChange={(e) => { this.setState({ comment: e.target.value }) }}\r\n          name=\"comment\" id=\"comment\" required\r\n        />\r\n        <button \r\n          className=\"commentbtn\"\r\n          onClick={ this.commentClickHandler }\r\n        >Comment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      post: state.postToView,\r\n      user: state.user\r\n  };\r\n}\r\n  \r\nexport default connect(mapStateToProps, { updateComments })(CommentForm);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Comment extends React.Component {\r\n\r\n  state = {\r\n    isLiked: false,\r\n    numLikes: this.props.comment.likes.length\r\n  }\r\n\r\n  checkIfLiked = (likesArray, userId) => {\r\n    const user = likesArray.filter(like => {\r\n      return like._id._id === userId; \r\n    });\r\n  \r\n    if (user.length === 0) {\r\n      return false; //this means user still has not liked the post\r\n    } else {\r\n      return true; //this means otherwise\r\n    }\r\n  }\r\n\r\n  toggleLike = () => {\r\n    axios\r\n    .patch(`http://localhost:8080/posts/${this.props.post_id}/comment/${this.props.comment._id}`, \r\n    {\r\n      user_id: this.props.user._id\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(\r\n      res => {\r\n          if(this.state.isLiked === false){\r\n              this.setState({\r\n                  isLiked: !this.state.isLiked,\r\n                  numLikes: this.state.numLikes + 1,\r\n              });\r\n          } else {\r\n              this.setState({\r\n                  isLiked: !this.state.isLiked,\r\n                  numLikes: this.state.numLikes - 1,\r\n              });\r\n          }\r\n      }    \r\n    )\r\n    .catch(\r\n      err => {\r\n        console.log(err);    \r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount(){\r\n    const didLike = this.checkIfLiked(this.props.comment.likes, this.props.user._id);\r\n\r\n    this.setState({\r\n      isLiked: didLike\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"comment-container\">\r\n      {console.log(this.props.comment)}\r\n        <p className=\"comment-content\">{this.props.comment.content}</p>\r\n        <p className=\"comment-author\">Submitted by: {this.props.comment.user.username}</p>\r\n        <p className=\"comment-likes\">\r\n          <i onClick={this.toggleLike} \r\n          className=\"fa fa-thumbs-up thumbs-up-icon\"\r\n          style={this.state.isLiked ? {color: \"blue\"} : {color: \"gray\"}}\r\n          ></i> {this.state.numLikes} people like this comment\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      user: state.user\r\n    };\r\n  }\r\n  \r\nexport default connect(mapStateToProps)(Comment);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport Comment from './Comment';\r\n\r\nclass Post extends React.Component {\r\n  state = {\r\n    // posts: []\r\n    isLiked: false,\r\n    numLikes: this.props.post.likes.length\r\n  };\r\n\r\n  checkIfLiked = (likesArray, userId) => {\r\n    const user = likesArray.filter(like => {\r\n      return like._id._id === userId; \r\n    });\r\n  \r\n    if (user.length === 0) {\r\n      return false; //this means user still has not liked the post\r\n    } else {\r\n      return true; //this means otherwise\r\n    }\r\n  }\r\n\r\n  \r\n  toggleLike = () => {\r\n      axios\r\n      .patch(`http://localhost:8080/posts/${this.props.post._id}`, \r\n      {\r\n        user_id: this.props.user._id\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n      })\r\n      .then(\r\n        res => {\r\n            if(this.state.isLiked === false){\r\n                this.setState({\r\n                    isLiked: !this.state.isLiked,\r\n                    numLikes: this.state.numLikes + 1,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    isLiked: !this.state.isLiked,\r\n                    numLikes: this.state.numLikes - 1,\r\n                });\r\n            }\r\n        }    \r\n      )\r\n      .catch(\r\n        err => {\r\n          console.log(err);    \r\n        }\r\n      )\r\n  }\r\n\r\n  componentDidMount(){\r\n    const didLike = this.checkIfLiked(this.props.post.likes, this.props.user._id);\r\n\r\n    this.setState({\r\n      isLiked: didLike\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <article className=\"post-container\">\r\n            <h2 className=\"post-title\">{this.props.post.title}</h2>\r\n            <br />\r\n            <p className=\"post-content\">{this.props.post.content}</p>\r\n            <p className=\"post-author\">Author: <span>{this.props.post.user_id.username}</span></p>\r\n            <p>\r\n                <i onClick={this.toggleLike} \r\n                className=\"fa fa-thumbs-up thumbs-up-icon\"\r\n                style={this.state.isLiked ? {color: \"blue\"} : {color: \"gray\"}}\r\n                ></i> {this.state.numLikes} people like this post\r\n            </p>\r\n        </article>\r\n        <section className=\"post-comments-container\">\r\n          <CommentForm />\r\n          <div className=\"comments-container\">\r\n            <h2 className=\"comment-container-header\">Comments</h2>\r\n            {this.props.post.comments.map((comment, index) => {\r\n              return <Comment \r\n                key={comment._id}\r\n                comment={comment}\r\n                index={index}\r\n                post_id={this.props.post._id}\r\n              />\r\n            })}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    post: state.postToView,\r\n    user: state.user\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CreatePostForm extends React.Component {\r\n\r\n  state = {\r\n    content: '',\r\n    user_id: this.props.user._id,\r\n    title: ''\r\n  }\r\n\r\n  contentChangeHandler = (e) => {\r\n    this.setState({\r\n        content: e.target.value,  \r\n    });\r\n  }\r\n\r\n  submit = () => {\r\n    axios.post('http://localhost:8080/posts', this.state,\r\n    {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(res => {\r\n      this.setState({\r\n        content: '',\r\n        title: ''\r\n      });\r\n      alert(\"Post submitted successfully!\");\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"create-post-textarea-container\">\r\n        <h2>Submit a Blog Post</h2>\r\n        <p>Please write your blog post in the text area below.</p>\r\n        <hr></hr>\r\n\r\n        Title:{' '}\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.title}\r\n          onChange={(e) => { this.setState({ title: e.target.value }) }}\r\n          name=\"title\" id=\"title\" required\r\n        />\r\n        <br />\r\n        Content:{' '}\r\n        <textarea \r\n          autoFocus={true} \r\n          id='form-blog-content' \r\n          rows='20' \r\n          value={this.state.content}\r\n          onChange={this.contentChangeHandler}/>\r\n\r\n        <button \r\n          className=\"create-post-btn\"\r\n          onClick={ this.submit }\r\n        >Submit</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      user: state.user\r\n  };\r\n}\r\n  \r\nexport default connect(mapStateToProps)(CreatePostForm);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { viewPost } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nclass UserPost extends React.Component {\r\n\r\n  state = {\r\n    isClicked: false\r\n  }\r\n\r\n  clickHandler = (e) => {\r\n    this.props.post.user_id = {\r\n        _id: this.props.post.user_id,\r\n        username: this.props.user.username,\r\n    }\r\n    this.props.viewPost(this.props.post);\r\n    this.setState({isClicked: true});\r\n  }\r\n\r\n  createDate = (date) => {\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', \r\n      'May', 'Jun', 'Jul', 'Aug', \r\n      'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n    const postDate = new Date(date);\r\n\r\n    const monthIndex = postDate.getMonth();\r\n    const day = postDate.getDate();\r\n\r\n    return `${months[monthIndex]} ${day}`\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li \r\n        className=\"minipost-container\" \r\n        onClick={ this.clickHandler }\r\n        id={this.props.post._id}  \r\n      >\r\n      {console.log(this.props.post)}\r\n      {console.log(this.props.user)}\r\n        {this.state.isClicked ? <Redirect to=\"/post\" /> : null}\r\n        <h2>{this.props.post.title}</h2>\r\n        {this.createDate(this.props.post.createdAt)}\r\n        <hr />\r\n        {this.props.post.user_id === this.props.user._id\r\n        ?\r\n        <DeleteButton \r\n          post={this.props.post}\r\n        />\r\n        :\r\n        null\r\n        }\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { viewPost })(UserPost);","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport MiniPost from './MiniPost';\r\nimport UserPost from './UserPost';\r\n\r\nclass UserPosts extends React.Component {\r\n  state = {\r\n    posts: []\r\n  };\r\n\r\n  componentDidMount(){\r\n    axios\r\n    .get(`http://127.0.0.1:8080/user/${this.props.user._id}/posts`, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token')\r\n      }\r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setState({\r\n        posts: res.data.data\r\n      });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <ol className=\"posts-container\">\r\n        {this.state.posts.map((post, index) => (\r\n          <UserPost\r\n            key={post._id}\r\n            post={post}\r\n          />\r\n        ))}\r\n      </ol>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    user: state.user,\r\n\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserPosts);","// import logo from './logo.svg';\nimport './styles/custom.css';\nimport React from 'react';\nimport { Link, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Welcome from './components/Welcome';\nimport RegistrationForm from './components/RegistrationForm';\nimport SigninForm from './components/SigninForm';\nimport Posts from './components/Posts';\nimport Post from './components/Post';\nimport CreatePostForm from './components/CreatePostForm';\nimport UserPosts from './components/UserPosts';\nimport { logout } from './actions/index';\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <div className=\"main-container-react\">\n        <nav className=\"navbar\">\n\n          <h1 id=\"site-name\">Medium++</h1>\n\n          <div className=\"navbar-links\">\n            {this.props.user ? (\n              <>\n                <Link to=\"/posts\">View posts</Link>\n                <Link to=\"/user/posts\">My posts</Link>\n                <Link to=\"/posts/create\">Create post</Link>\n                <button onClick={this.props.logout} id=\"logout\">Logout</button>\n              </>\n            ) : (\n              <>\n                <Link to=\"/register\">Get Started</Link>\n                <Link to=\"/signin\">Sign In</Link>\n                {/* <Redirect to=\"/welcome\" /> */}\n              </>\n            )}\n          </div>\n          \n        </nav>\n\n        <Route exact path=\"/\">\n          <Redirect to=\"/welcome\" />\n        </Route>\n\n        <Route exact path=\"/welcome\">\n          {this.props.user && <Redirect to=\"/posts\" />}\n          <Welcome />\n        </Route>\n\n        <Route exact path=\"/register\">\n          {this.props.user && <Redirect to=\"/posts\" />}\n          <RegistrationForm />\n        </Route>\n\n        <Route exact path=\"/signin\">\n          {this.props.user && <Redirect to=\"/posts\" />}\n          <SigninForm />\n        </Route>\n\n        <Route exact path=\"/posts\">\n          {!this.props.user && <Redirect to=\"/welcome\" />}\n          <Posts />\n        </Route>\n\n        \n        <Route exact path=\"/post\">\n          {this.props.postToView === null ? <Redirect to=\"/posts\" /> : <Post />}\n          {!this.props.user && <Redirect to=\"/welcome\" />}\n          {/* ????          */}\n        </Route>\n\n        <Route exact path=\"/posts/create\">\n          {!this.props.user && <Redirect to=\"/welcome\" />}\n          <CreatePostForm />\n        </Route>\n\n        <Route exact path=\"/user/posts\">\n          {!this.props.user && <Redirect to=\"/welcome\" />}\n          <UserPosts />\n        </Route>\n        \n      </div>\n    );\n  }\n}\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nconst mapStateToProps = state => {\n  return {\n    postToView: state.postToView,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {logout})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let user;\r\nif (localStorage.getItem('user')) {\r\n  user = JSON.parse(localStorage.getItem('user'));\r\n} else {\r\n  user = null;\r\n}\r\n\r\nconst initialState = {\r\n  user: user,\r\n  postToView: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'SIGNIN':\r\n        localStorage.setItem('user', JSON.stringify(action.payload));\r\n        return {\r\n          ...state,\r\n          user: action.payload\r\n        };\r\n      case 'LOGOUT':\r\n        localStorage.removeItem('user');\r\n        return {\r\n          ...state,\r\n          user: null\r\n        };\r\n      case 'VIEWPOST':\r\n        return {\r\n          ...state,\r\n          postToView: action.payload\r\n        }\r\n      case 'UPDATECOMMENTS':\r\n        const post = {...state.postToView};\r\n\r\n        const newComment = action.payload[action.payload.length - 1];\r\n\r\n        let dummyComment = {\r\n          content: newComment.content,\r\n          likes: newComment.likes,\r\n          _id: newComment._id,\r\n          user: {\r\n            username: state.user.username\r\n          }\r\n        };\r\n\r\n        post.comments.push(dummyComment);\r\n\r\n        return {\r\n          ...state,\r\n          postToView: post\r\n        }\r\n\r\n      case 'LOGOUT':\r\n        window.localStorage.clear();\r\n        return {\r\n          ...state,\r\n          user: null,\r\n          postToView: null\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\n// import store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore(reducer)}>\n    {/* <Provider store={store}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}